version: '3.8'

services:
  # A360 Scraping Platform - Full Stack App
  a360-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: a360-scraping-platform
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - CORS_ORIGIN=https://yourdomain.com
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      # Supabase credentials (set these in .env file)
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    volumes:
      # Optional: Mount for persistent logs
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "http.get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: a360-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates
    depends_on:
      - a360-app
    restart: unless-stopped
    # Uncomment for production with SSL
    # environment:
    #   - NGINX_HOST=yourdomain.com
    #   - NGINX_PORT=80

networks:
  default:
    name: a360-network